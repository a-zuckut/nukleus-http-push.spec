#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newTargetInputRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property sourceInput ${nuklei.streams("http-push", "source")}
property targetInput ${nuklei.streams("target", "http-push#source")}
property targetOutputEst ${nuklei.streams("http-push", "target")}
property sourceOutputEst ${nuklei.streams("source", "http-push#target")}

property newTargetInputId ${nuklei:newStreamId()}
property newTargetInputId2 ${nuklei:newStreamId()}
property newSourceOutputEstId ${nuklei:newStreamId()}
property newSourceOutputEstId2 ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}
property newTargetCorrelationId2 ${nuklei:newCorrelationId()}

# Source INPUT

connect await ROUTED_OUTPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceInput.buffer)}
        option writer ${agrona:oneToOneWriter(sourceInput.throttle)}
connected

read [0x00 0x00 0x00 0x01]
     ([0..8]:sourceInputId)
     ([0..8]:sourceInputRef)
     ([0..8]:sourceCorrelationId)
     [0x00] [0x07] ":scheme" [0x04] "http"
     [0x00] [0x07] ":method" [0x03] "GET"
     [0x00] [0x05] ":path" [0x05] "/data"
     [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
     [0x00] [0x0f] "x-poll-interval" [0x01] "2"

read notify HTTP_BEGIN_INPUT_RECEIVED

write [0x40 0x00 0x00 0x02]
      ${sourceInputId}
      [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x01]
     ([0..8]:sourceInputId2)
     ([0..8]:sourceInputRef2)
     ([0..8]:sourceCorrelationId2)
     [0x00] [0x07] ":scheme" [0x04] "http"
     [0x00] [0x07] ":method" [0x03] "GET"
     [0x00] [0x05] ":path" [0x05] "/data"
     [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
     [0x00] [0x0f] "x-poll-interval" [0x01] "2"
     [0x00] [0x0c] "x-reactivity" [0x18] "http-push-sync, no-cache"
     [0x00] [0x0d] "cache-control" [0x08] "no-cache"

read notify HTTP_BEGIN_INPUT_RECEIVED2

write [0x40 0x00 0x00 0x02]
      ${sourceInputId2}
      [0x00 0x02 0x00 0x00]
write flush

close
closed

# Target OUTPUT

connect await ROUTED_INPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetInput.throttle)}
        option writer ${agrona:oneToOneWriter(targetInput.buffer)}
connected

write await HTTP_BEGIN_INPUT_RECEIVED

write [0x00 0x00 0x00 0x01]
      ${newTargetInputId}
      ${newTargetInputRef}
      ${newTargetCorrelationId}
      [0x00] [0x07] ":scheme" [0x04] "http"
      [0x00] [0x07] ":method" [0x03] "GET"
      [0x00] [0x05] ":path" [0x05] "/data"
      [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
      [0x00] [0x0f] "x-poll-interval" [0x01] "2"
write flush

read [0x40 0x00 0x00 0x02]
     ${newTargetInputId}
     [0..4]

write await HTTP_BEGIN_INPUT_RECEIVED2

write [0x00 0x00 0x00 0x01]
      ${newTargetInputId2}
      ${newTargetInputRef}
      ${newTargetCorrelationId2}
      [0x00] [0x07] ":scheme" [0x04] "http"
      [0x00] [0x07] ":method" [0x03] "GET"
      [0x00] [0x05] ":path" [0x05] "/data"
      [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
      [0x00] [0x0f] "x-poll-interval" [0x01] "2"
write flush

read [0x40 0x00 0x00 0x02]
     ${newTargetInputId2}
     [0..4]

close
closed

# Target INPUT

connect await ROUTED_OUTPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetOutputEst.buffer)}
        option writer ${agrona:oneToOneWriter(targetOutputEst.throttle)}
connected

read [0x00 0x00 0x00 0x01]
     ([0..8]:targetOutputEstId)
     ([0..8]:targetOutputEstRef)
     ${newTargetCorrelationId}
     [0x00] [0x07] ":status" [0x03] "200"
     [0x00] [0x0e] "content-length" [0x02] "11"

read notify HTTP_BEGIN_OUTPUT_EST_RECEIVED

write [0x40 0x00 0x00 0x02]
      ${targetOutputEstId}
      [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
     ${targetOutputEstId}
     [0x00 0x0b]
     "hello world"

write [0x40 0x00 0x00 0x02]
      ${targetOutputEstId}
      [0x00 0x02 0x00 0x00]
write flush

### Second Response

read [0x00 0x00 0x00 0x01]
     ([0..8]:targetOutputEstId2)
     ([0..8]:targetOutputEstRef2)
     ${newTargetCorrelationId2}
     [0x00] [0x07] ":status" [0x03] "200"
     [0x00] [0x0e] "content-length" [0x02] "12"

read notify HTTP_BEGIN_OUTPUT_EST_RECEIVED2

write [0x40 0x00 0x00 0x02]
      ${targetOutputEstId2}
      [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
     ${targetOutputEstId2}
     [0x00 0x0c] "hello world2"

write [0x40 0x00 0x00 0x02]
      ${targetOutputEstId2}
      [0x00 0x02 0x00 0x00]
write flush

close
closed

# Souce OUTPUT

connect await ROUTED_OUTPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceOutputEst.throttle)}
        option writer ${agrona:oneToOneWriter(sourceOutputEst.buffer)}
connected

write await HTTP_BEGIN_OUTPUT_EST_RECEIVED

### RESPONSE 1
write [0x00 0x00 0x00 0x01]
      ${newSourceOutputEstId}
      [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
      ${sourceCorrelationId}
      [0x00] [0x07] ":status" [0x03] "200"
      [0x00] [0x0e] "content-length" [0x02] "11"

write flush

read [0x40 0x00 0x00 0x02]
     ${newSourceOutputEstId}
     [0..4]

### PUSH PROMISE 1
write [0x00 0x00 0x00 0x02]
      ${newSourceOutputEstId}
      [0x00 0x00]
      [0x00] [0x07] ":scheme" [0x04] "http"
      [0x00] [0x07] ":method" [0x03] "GET"
      [0x00] [0x05] ":path" [0x05] "/data"
      [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
      [0x00] [0x0f] "x-poll-interval" [0x01] "2"
      [0x00] [0x0c] "x-reactivity" [0x18] "http-push-sync, no-cache"
      [0x00] [0x0d] "cache-control" [0x08] "no-cache"
write flush

read [0x40 0x00 0x00 0x02]
     ${newSourceOutputEstId}
     [0x00 0x00 0x00 0x00]

write [0x00 0x00 0x00 0x02]
      ${newSourceOutputEstId}
      [0x00 0x0b]
      "hello world"
write flush

read [0x40 0x00 0x00 0x02]
     ${newSourceOutputEstId}
     [0..4]

# RESPONSE 2 
write await HTTP_BEGIN_OUTPUT_EST_RECEIVED2

write [0x00 0x00 0x00 0x01]
      ${newSourceOutputEstId2}
      [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
      ${sourceCorrelationId2}
      [0x00] [0x07] ":status" [0x03] "200"
      [0x00] [0x0e] "content-length" [0x02] "12"
write flush

read [0x40 0x00 0x00 0x02]
     ${newSourceOutputEstId2}
     [0..4]

### PUSH PROMISE 2 
write [0x00 0x00 0x00 0x02]
      ${newSourceOutputEstId2}
      [0x00] [0x00]
      [0x00] [0x07] ":scheme" [0x04] "http"
      [0x00] [0x07] ":method" [0x03] "GET"
      [0x00] [0x05] ":path" [0x05] "/data"
      [0x00] [0x0a] ":authority" [0x0e] "localhost:8080"
      [0x00] [0x0f] "x-poll-interval" [0x01] "2"
      [0x00] [0x0c] "x-reactivity" [0x18] "http-push-sync, no-cache"
      [0x00] [0x0d] "cache-control" [0x08] "no-cache"

write flush

read [0x40 0x00 0x00 0x02]
     ${newSourceOutputEstId2}
     [0x00 0x00 0x00 0x00]

write [0x00 0x00 0x00 0x02]
      ${newSourceOutputEstId2}
      [0x00 0x0c]
      "hello world2"
write flush

read [0x40 0x00 0x00 0x02]
     ${newSourceOutputEstId2}
     [0..4]

close
closed
